{
    "name": "vscode-azurecache",
    "displayName": "Azure Cache",
    "description": "Manage and browse through data in your Azure Caches.",
    "version": "0.2.0",
    "aiKey": "AIF-00000000-0000-0000-0000-000000000000",
    "publisher": "ms-azurecache",
    "preview": true,
    "engines": {
        "vscode": "^1.57.0"
    },
    "repository": {
        "type": "git",
        "url": "https://github.com/microsoft/vscode-azurecache"
    },
    "bugs": {
        "url": "https://github.com/microsoft/vscode-azurecache/issues"
    },
    "homepage": "https://github.com/microsoft/vscode-azurecache/blob/main/README.md",
    "license": "SEE LICENSE IN LICENSE.txt",
    "categories": [
        "Azure"
    ],
    "keywords": [
        "Azure",
        "Azure Cache",
        "Azure Cache for Redis",
        "Redis"
    ],
    "icon": "resources/azure-cache.png",
    "main": "./dist/extension.js",
    "scripts": {
        "vscode:prepublish": "webpack --mode production",
        "clean": "rimraf out/ dist/",
        "compile": "rimraf out/ && tsc -p ./tsconfig-test.json",
        "lint": "eslint src src-shared src-webview --ext .ts,.tsx",
        "pretest": "npm run compile && npm run lint",
        "test": "node ./out/src/test/runTest.js",
        "watch": "webpack --mode development --watch --info-verbosity verbose",
        "package": "vsce package --baseImagesUrl https://github.com/microsoft/vscode-azurecache/raw/main/",
        "publish": "vsce publish --baseImagesUrl https://github.com/microsoft/vscode-azurecache/raw/main/"
    },
    "activationEvents": [
        "onView:azureCache"
    ],
    "contributes": {
        "viewsContainers": {
            "activitybar": [
                {
                    "id": "azure",
                    "title": "Azure",
                    "icon": "resources/azure.svg"
                }
            ]
        },
        "views": {
            "azure": [
                {
                    "id": "azureCache",
                    "name": "Caches",
                    "icon": "resources/azure-cache.svg"
                }
            ]
        },
        "menus": {
            "view/item/context": [
                {
                    "command": "azureCache.selectSubscriptions",
                    "when": "view == azureCache && viewItem == azureextensionui.azureSubscription",
                    "group": "inline"
                },
                {
                    "command": "azureCache.refreshSubscription",
                    "when": "view == azureCache && viewItem == azureextensionui.azureSubscription",
                    "group": "9_refresh"
                },
                {
                    "command": "azureCache.refreshCache",
                    "when": "view == azureCache && viewItem == redisCache",
                    "group": "9_refresh"
                },
                {
                    "command": "azureCache.addKeyFilter",
                    "when": "view == azureCache && viewItem == redisCache",
                    "group": "inline"
                },
                {
                    "command": "azureCache.selectDatabases",
                    "when": "view == azureCache && viewItem == redisDbFilter",
                    "group": "inline"
                },
                {
                    "command": "azureCache.selectClusterNodes",
                    "when": "view == azureCache && viewItem == redisClusterNodeFilter",
                    "group": "inline"
                },
                {
                    "command": "azureCache.refreshKeyFilter",
                    "when": "view == azureCache && viewItem == keyFilter",
                    "group": "9_refresh"
                },
                {
                    "command": "azureCache.setKeyFilter",
                    "when": "view == azureCache && viewItem == keyFilter",
                    "group": "inline"
                },
                {
                    "command": "azureCache.openInPortal",
                    "when": "view == azureCache && viewItem == redisCache",
                    "group": "5_portal"
                },
                {
                    "command": "azureCache.copyConnectionString",
                    "when": "view == azureCache && viewItem =~ /redisCache/",
                    "group": "5_portal"
                }
            ],
            "commandPalette": [
                {
                    "command": "azureCache.selectSubscriptions",
                    "when": "never"
                },
                {
                    "command": "azureCache.refreshSubscription",
                    "when": "never"
                },
                {
                    "command": "azureCache.refreshCache",
                    "when": "never"
                },
                {
                    "command": "azureCache.addKeyFilter",
                    "when": "never"
                },
                {
                    "command": "azureCache.selectDatabases",
                    "when": "never"
                },
                {
                    "command": "azureCache.selectClusterNodes",
                    "when": "never"
                },
                {
                    "command": "azureCache.refreshKeyFilter",
                    "when": "never"
                },
                {
                    "command": "azureCache.setKeyFilter",
                    "when": "never"
                },
                {
                    "command": "azureCache.viewCacheProps",
                    "when": "never"
                }
            ]
        },
        "commands": [
            {
                "command": "azureCache.selectSubscriptions",
                "title": "Select Subscriptions...",
                "category": "Azure Cache",
                "icon": "$(filter)"
            },
            {
                "command": "azureCache.refreshSubscription",
                "title": "Refresh",
                "category": "Azure Cache"
            },
            {
                "command": "azureCache.refreshCache",
                "title": "Refresh",
                "category": "Azure Cache"
            },
            {
                "command": "azureCache.addKeyFilter",
                "title": "Add key filter",
                "category": "Azure Cache",
                "icon": "$(add)"
            },
            {
                "command": "azureCache.selectDatabases",
                "title": "Select Databases...",
                "category": "Azure Cache",
                "icon": "$(filter)"
            },
            {
                "command": "azureCache.selectClusterNodes",
                "title": "Select Shards...",
                "category": "Azure Cache",
                "icon": "$(filter)"
            },
            {
                "command": "azureCache.refreshKeyFilter",
                "title": "Refresh",
                "category": "Azure Cache"
            },
            {
                "command": "azureCache.setKeyFilter",
                "title": "Set key filter",
                "category": "Azure Cache",
                "icon": "$(edit)"
            },
            {
                "command": "azureCache.viewCacheProps",
                "title": "View cache properties",
                "category": "Azure Cache"
            },
            {
                "command": "azureCache.openInPortal",
                "title": "Open in Portal",
                "category": "Azure Cache"
            },
            {
                "command": "azureCache.copyConnectionString",
                "title": "Copy connection string",
                "category": "Azure Cache"
            }
        ]
    },
    "devDependencies": {
        "@babel/core": "^7.14.5",
        "@babel/plugin-proposal-class-properties": "^7.14.5",
        "@babel/plugin-transform-runtime": "^7.14.5",
        "@babel/preset-env": "^7.14.5",
        "@babel/preset-react": "^7.14.5",
        "@babel/preset-typescript": "^7.14.5",
        "@types/glob": "^7.1.3",
        "@types/ioredis": "^4.26.4",
        "@types/mocha": "^8.2.2",
        "@types/node": "^14.14.31",
        "@types/react": "^17.0.11",
        "@types/react-dom": "^17.0.7",
        "@types/sinon": "^10.0.2",
        "@types/uuid": "^8.3.0",
        "@types/vscode": "^1.57.0",
        "@typescript-eslint/eslint-plugin": "^4.27.0",
        "@typescript-eslint/parser": "^4.27.0",
        "babel-loader": "^8.2.2",
        "clean-webpack-plugin": "^3.0.0",
        "css-loader": "^5.2.6",
        "eslint": "^7.28.0",
        "eslint-config-prettier": "^8.3.0",
        "eslint-plugin-prettier": "^3.4.0",
        "eslint-plugin-react": "^7.24.0",
        "filemanager-webpack-plugin": "3.0.0-alpha.1",
        "glob": "^7.1.7",
        "mocha": "^9.0.0",
        "ms-rest": "^2.5.4",
        "prettier": "2.3.1",
        "rimraf": "^3.0.2",
        "style-loader": "^2.0.0",
        "terser-webpack-plugin": "^4.2.3",
        "ts-loader": "^7.0.5",
        "ts-sinon": "^2.0.1",
        "typescript": "^4.3.2",
        "vsce": "^1.93.0",
        "vscode-test": "^1.5.2",
        "webpack": "^4.44.1",
        "webpack-cli": "^3.3.12"
    },
    "dependencies": {
        "@azure/arm-rediscache": "^4.0.0",
        "@babel/runtime": "^7.14.5",
        "@fluentui/react": "^8.18.0",
        "@fluentui/font-icons-mdl2": "^8.1.2",
        "ioredis": "^4.27.6",
        "react": "^17.0.2",
        "react-dom": "^17.0.2",
        "sinon": "^11.1.1",
        "uuid": "^8.3.2",
        "vscode-azureextensiondev": "^0.9.2",
        "vscode-azureextensionui": "^0.44.0"
    },
    "extensionDependencies": [
        "ms-vscode.azure-account"
    ]
}
